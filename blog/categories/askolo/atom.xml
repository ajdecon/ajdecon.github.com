<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: askolo | Thinking Out Loud]]></title>
  <link href="http://ajdecon.github.com/blog/categories/askolo/atom.xml" rel="self"/>
  <link href="http://ajdecon.github.com/"/>
  <updated>2015-04-12T13:31:50-06:00</updated>
  <id>http://ajdecon.github.com/</id>
  <author>
    <name><![CDATA[Adam DeConinck]]></name>
    <email><![CDATA[ajdecon@ajdecon.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Physics book recommendations (#askolo rescued answer)]]></title>
    <link href="http://ajdecon.github.com/physics-book-recommendations-number-askolo-rescued-answer/"/>
    <updated>2012-10-26T01:42:00-06:00</updated>
    <id>http://ajdecon.github.com/physics-book-recommendations-number-askolo-rescued-answer</id>
    <content type="html"><![CDATA[<p><em><a href="http://www.askolo.com">Askolo</a> is a question-answer site
<a href="http://blog.ajdecon.org/some-thoughts-on-hpc-in-the-cloud-askolo-ques/">I played with for a while</a>, but it was recently accounced that
the site was going into maintenance mode so the startup in question could focus on other projects. It's a little sad, but
my own usage of the site did tail off pretty quickly. I did have a couple of answers there which I put a little
thought into, so I might rescue a few of them as blog posts. Here's one.</em></p>

<h4>Q: Do you have any recommendations for high quality physics books? (I've been enjoying the Structure and Interpretation of Classical Mechanics recently).</h4>

<p>A: It's been a little while since I sat down with a good physics text, but here are some I remember liking:</p>

<h4>General physics:</h4>

<ul>
<li>Anything of Feynman's is good, particularly his Lectures on Physics and The Character of Physical Law (absolutely one of my favorite short physics books). One exception: they're selling a book of problem sets with his lectures now, but to be honest I didn't care for them much.</li>
<li>Quantum Physics by Eisberg and Resnick - I remember liking this as a good general intro for quantum physics, but it doesn't use braket notation which quite bothered me at the time.</li>
<li>I also used Principles of Quantum Mechanics by Shankar, which did provide a really good introduction to braket notation but I thought did less well with the actual physics</li>
<li>Griffiths wrote decent if unexciting texts on Electrodynamics and Quantum Physics, which are very well-regarded by many</li>
<li>Introductory Statistical Mechanics by Bowley and Sanchez - One of the most readable intros to stat-mech I've found</li>
<li>Introduction to Solid State Physics by Kittel - Another classic recommendation, but still an excellent solid state book. I actually bought this for myself and read it despite having no solid state class that semester, and found it fun.</li>
<li>Not a textbook, but George Gamow's "Thirty Years That Shook Physics" is a nicely readable history of the early development of quantum physics by someone who lived through it.</li>
</ul>


<p>AVOID "Electromagnetism" by Pollack and Stump, and "Optical Waves in Crystals" by Yariv and Yeh. I found both books intensely unpleasant.</p>

<p>Edit: I notice after-the-fact that there's not a single book on classical mechanics in above list, except Feynman. I honestly just never liked any of them. Perhaps I should read Newton? :-)</p>

<h4>Materials science, soft-matter physics and polymer physics:</h4>

<ul>
<li>Electronic Materials and Devices by Kasap - My second intro to solid state physics, and perhaps it was strictly more useful than Kittel: I remember the problem sets being much better. It was much more focused on the materials science and practical engineering.</li>
<li>Molecular Driving Forces by Dill and Bromberg - Starts as another stat-mech book, but flows into some generic materials science and polymer physics</li>
<li>Polymer Physics by Rubinstein and Colby - This is a truly excellent introductory text on polymer physics and rheology, and explains the weird statistical ways that polymeric materials behave in a much clearer fashion than most of the books I found.</li>
<li>Structure and Rheology of Complex Fluids by Larson - I actually really hated the experience of reading this book, but it's the best survey I've found for all the weird things viscoelastic materials do. I read it mostly for the references.</li>
</ul>


<p>Hope you find something useful in there!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some thoughts on #HPC in the #cloud... (#askolo question)]]></title>
    <link href="http://ajdecon.github.com/some-thoughts-on-hpc-in-the-cloud-askolo-ques/"/>
    <updated>2012-04-13T00:00:00-06:00</updated>
    <id>http://ajdecon.github.com/some-thoughts-on-hpc-in-the-cloud-askolo-ques</id>
    <content type="html"><![CDATA[<p><span style="font-size: small;">As <a href="http://blog.ajdecon.org/askolo-an-interesting-new-one-to-one-qa-site">previously mentioned</a>, I've been spending some time lately on <a href="http://www.askolo.com/">Askolo</a>, a directed Q&amp;A website. My first question from another user was "<span style="color: #161f21; font-family: Helvetica Neue, Helvetica, Arial, sans-serif; line-height: 16px;">What do you think of the AWS HPC clusters?</span><span style="color: #161f21; font-family: Helvetica Neue, Helvetica, Arial, sans-serif; font-weight: bold; line-height: 16px;">", </span><span style="color: #161f21; line-height: 16px;">and I wrote a fairly lengthy 
and rambling response which seemed worth saving. <strong>(From 12/9/2012: Askolo went into maintenance mode later this year, and the 
site's future is uncertain... so this may have been a good idea! :) )</strong>  I'm pasting it here (slightly modified) so it gets a different audience, and to keep my own copy for later comparison as my opinions evolve.</span></span></p>


<p><span style="color: #161f21; font-family: Helvetica Neue, Helvetica, Arial, sans-serif; font-weight: bold; line-height: 16px; font-size: small;">Q: What do you think of the AWS HPC clusters?</span></p>


<p><span style="font-size: small;"><strong>A: </strong>Disclaimer on this one: I'm an engineer at <a href="http://www.r-hpc.com/">R Systems</a>, which provides bare-metal HPC clusters as a service, in competition with Amazon's HPC offering. Also, this got a little long. :)</span></p>


<p><span style="font-size: small;"><span class="answer-chunk" style="color: #333333; font-family: georgia, times new roman, times, serif; line-height: 21px;"><br />That said, I think the AWS HPC clusters are really interesting. They're definitely useful for "bursting" loads and certain classes of problems, though they still have a few problems to solve before they can replace a "traditional" cluster. But for a lot of wokloads, it may be exactly what you want.<p />For HPC, Amazon provides exactly the same thing it provides for everyone else: a big pool of available servers which can be spun up and down at will, with a potentially huge upper limit. You may have seen the article last year about the 30,000 or so core cluster which <a href="http://arstechnica.com/business/news/2011/09/30000-core-cluster-built-on-amazon-ec2-cloud.ars">Cycle Computing spun up on EC2</a>: it made the Top 500 list of supercomputers, and demonstrated that it was possible to run a huge compute resource "in the cloud".&nbsp;<p />There are some drawbacks though. Cycle Computing ran an embarrassingly parallel problem, but a lot of research models are very tightly coupled and do a lot of message passing between processes. (For example, big CFD models and mechanical modeling problems.) Most big HPC clusters currently use Infiniband as their interconnect, so node-to-node the network provides up to 54 Gb/s bandwidth and 1 us latency (process-to-process). The latency is especially important: I think most CFD apps I've worked with lately are latency-bound. Right now the best network performance you can get on EC2 is 10Gb ethernet, which doesn't quite provide the same punch. The disadvantage to IB is that its network model is radically different, to the point where the IP Protocol feels a bit bolted-on and can't get all the network performance. Most people program their apps with specialized message-passing libraries (ie MPI) which can take advantage of the IB network directly.<p />EC2 also doesn't get the same I/O performance you can get on bare metal. This one's a problem for lots of people, including big web sites, and it matters in HPC too. A lot of HPC installations have big parallel filesystems that stripe over many disks, like Lustre. It'd be interesting to see what you could do running Lustre on EC2, but I think using EBS as the backing strorage would make it somewhat painful. Much nicer to use big I/O nodes attached to Infiniband.<p />But you notice how much specialized hardware we're talking about here? Lots of big I/O nodes, a specialized network where even IP is a second-class citizen... it all makes sense if you do HPC all the time, but if you only need to run for a few months out of the year it can seem like overkill. Especially if you are in fact running embarrassingly parallel models (and really, a whole lot of them are).<p />I saw a talk at Supercomputing in November where someone compared their own internal cluster to 3-year reserved instances on Amazon, and determined that Amazon would make sense if their internal cluster had yearly utilization of less than about 70%. That's actually pretty impressive! Most "big HPC" out there has utilization of 90+% and can you get us some more please ;-) , but there are a lot of companies with underused 32-node clusters out there which might make more sense in the cloud.<p />On a site with so many people running startups I hope I can be forgiven a tiny bit of self-promotion: at R Systems we provide clusters as a service with all the bells and whistles and Infiniband included, and help you use and configure them as well. :-) But that doesn't mean I think Amazon sucks: I've seen their service do amazing things, especially for highly-variable workplace or embarrassingly parallel problems.&nbsp;<p />What all this does mean that for HPC, you need to think at least a bit about the hardware, which I guess makes even Amazon a bit less cloudy. You need to think about what kind of inter-node communication you need, ans how fast your IO needs to be. If you use GPUs, you need to know what type ans think about PCI performance. And you can't just throw more cores at the problem, because communication bottlenecks will kill you.<p />So HPC on AWS is very cool, as is HPC on R Systems or other external providers. But profile your application and think about hardware before you spin up 1000 nodes. :-)</span><span style="color: #333333; font-family: georgia, times new roman, times, serif; line-height: 21px;">&nbsp;</span></span></p>

]]></content>
  </entry>
  
</feed>
